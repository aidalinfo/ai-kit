name: NPM Publish MCP Docs

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/mcp-docs-server/package.json'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          scope: '@ai_kit'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: Get package version
        id: package
        run: |
          VERSION=$(cd packages/mcp-docs-server && node -p "require('./package.json').version")
          PACKAGE_NAME=$(cd packages/mcp-docs-server && node -p "require('./package.json').name")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "Package: $PACKAGE_NAME@$VERSION"

      - name: Check if version exists on NPM
        id: npm-check
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/mcp-docs-server
          if npm view ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }} version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.package.outputs.version }} already exists on NPM"
            exit 1
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.package.outputs.version }} does not exist on NPM"
          fi

      - name: Install dependencies
        run: |
          cd packages/mcp-docs-server
          pnpm install

      - name: Build package
        run: |
          cd packages/mcp-docs-server
          pnpm build

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/mcp-docs-server
          npm publish --access public

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}-mcp-docs
          name: AI KIT MCP Docs - Release v${{ steps.package.outputs.version }}
          body: |
            ## Changes

            Package ${{ steps.package.outputs.name }} has been updated to version ${{ steps.package.outputs.version }}.
          draft: false
          prerelease: false
